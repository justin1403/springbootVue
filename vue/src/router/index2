import Vue, {nextTick} from 'vue'
import VueRouter from 'vue-router'
import store from "@/store";

Vue.use(VueRouter)

const routes = [

  {
    path: '/login',
    name: 'Login',
    component: ()=>import('../views/Login.vue')
  },
  {
    path: '/register',
    name: 'Register',
    component: ()=>import('../views/Register.vue')
  },
  {
    path: '/404',
    name: '404',
    component: ()=>import('../views/404.vue')
  },
  {
    path: '/front',
    name: 'front',
    component: ()=>import('../views/front/Front.vue'),
    children:[
      {
        path:'home',
        name:'FrontHome',
        component:()=>import('../views/front/Home.vue')
      },
      {
        path:'password',
        name:'Password',
        component:()=>import('../views/front/Password.vue')
      },
      {
        path:'person',
        name:'Person',
        component:()=>import('../views/front/Person.vue')
      },

    ]
  },

  // {
  //   path: '/about',
  //   name: 'about',
  //   // route level code-splitting
  //   // this generates a separate chunk (about.[hash].js) for this route
  //   // which is lazy-loaded when the route is visited.
  //   component: () => import(/* webpackChunkName: "about" */ '../views/AboutView.vue')
  // }
]

const router = new VueRouter({
  mode: 'history',
  // base: process.env.BASE_URL,
  routes
})

// 重置路由
export const restRouter=()=>{
  router.matcher=new VueRouter({
    mode:'history',
    routes
  })
}


// // 解决 Vue 重複點連相同路由
// const originalPush = VueRouter.prototype.push;
// VueRouter.prototype.push = function push(location){
//   return originalPush.call(this,location).catch((error)=>error);
// }


// //路由守衛
// router.beforeEach((to,from,next)=>{
//   localStorage.setItem("currentPathName",to.name)   // 設置當前的路由名稱，為了在 Header 組件中去使用
//   store.commit("setPath")   // 觸發 store 的數據更新
//   next()  //放行路由
// })



// 注意，刷新頁面會導致頁面路由重置
export const setRoutes=()=>{
  const storeMenus = localStorage.getItem("menus");
  if(storeMenus){
    //拼裝動態路由
    const manageRoute = { path:'/',name:'Manage',component:()=>import('../views/Manage.vue'),redirect:"/home",children:[
        {path:'person',name:'個人信息',component:()=>import('../views/Person.vue')},
        {path:'password',name:'修改密碼',component:()=>import('../views/Password.vue')},

      ]    }
    const menus = JSON.parse(storeMenus)
    menus.forEach(item=>{
      if(item.path){    // 當且權當 path 不為空的時候才去設置路由
        let itemMenu = {path:item.path.replace("/",""),name:item.name,component:()=>import('../views/'+item.pagePath+'.vue')}
        manageRoute.children.push(itemMenu)
      }else if(item.children.length) {
        item.children.forEach(item=>{
          if(item.path){
            let itemMenu = { path:item.path.replace("/",""),name:item.name,component:()=>import('../views/'+item.pagePath+'.vue')}
          }
        })
      }
    })




  }




}


export default router
