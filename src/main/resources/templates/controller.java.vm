package ${package.Controller};

import org.springframework.web.bind.annotation.*;

import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};
import ${package.common}.${Result};
import ${package.pagination}.${Page};
import ${package.query}.${QueryWrapper};

##import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
##import ${superServiceImplClassPackage};
import ${superPluginsPagination}.${Page};

#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};import javax.annotation.Resource;
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    @Resource
    private ${table.serviceName} ${table.entityPath}Service;

    // 新增或者更新
    @PostMapping
    public Result save(@RequestBody ${entity} ${table.entityPath}){
        ${table.entityPath}Service.saveOrUpdate(${table.entityPath});
        return Result.success();
    }

    @DeleteMapping("{id}")
    private Result delete(@PathVariable Integer id){
        ${table.entityPath}Service.removeById(id);
        return Result.success();
    }

    @PostMapping("/del/batch")
    public Result deleteBatch(@RequestBody List<Integer> ids){
        ${table.entityPath}Service.removeByIds(ids);
        return Result.success();
    }

    @GetMapping
    public Result findAll(){
        return Result.success(${table.entityPath}Service.list());
    }

    @GetMapping ("/{id}")
    public Result findOne(@PathVariable Integer id){
        return Result.success(${table.entityPath}Service.getById(id));
    }

    @GetMapping("/page")
    public Result finPage(@RequestParam Integer pageNum,
                                    @RequestParam Integer pageSize,
                                    @RequestParam(defaultValue = "") String username  ,
                                    @RequestParam(defaultValue = "") String email  ,
                                    @RequestParam(defaultValue = "") String address
        ){
        QueryWrapper<${entity}> queryWrapper =new QueryWrapper<>();

        if(!"".equals(username)){
        queryWrapper.like("username",username.trim());
        }
        if(!"".equals(email)) {
        queryWrapper.like("email", email.trim());
        }
        if(!"".equals(address)) {
        queryWrapper.like("address", address.trim());
        }


        queryWrapper.orderByDesc("id");
        return Result.success(${table.entityPath}Service.page(new Page<> (pageNum,pageSize),queryWrapper));
        }





}

#end